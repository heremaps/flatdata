{% import "rust/constant.jinja2" as constant %}
{% import "rust/enumeration.jinja2" as enumeration %}
{% import "rust/structure.jinja2" as structure %}
{% import "rust/archive.jinja2" as archive %}
{% import "rust/index.jinja2" as index %}
// Do not edit: This code was generated by flatdata's generator.

use flatdata::Struct;
{% if nodes | is_enumeration %}
use flatdata::helper::Int;
{% endif %}

pub mod schema {
    pub mod structs {
        {% for node in nodes if node | is_structure or node | is_archive %}
        pub const {{ node.name | camel_to_snake_case | upper }}: &str = r#"{{ tree.schema(node) }}"#;
        {% endfor %}
    }

    pub mod resources {
        {% for node in nodes -%}
        {% if node | is_archive %}
        {% set archive_ns = node.name | camel_to_snake_case %}
        pub mod {{ archive_ns }} {
            {% for r in node.resources -%}
            pub const {{ r.name | upper }}: &str = r#"{{ tree.schema(r) }}"#;
            {% endfor %}
        }
        {% endif %}
        {%- endfor %}
    }
}

{% for node in nodes %}
    {%- if node | is_structure and not node | is_multivector_index %}
        {{- structure.declaration(node) }}
    {%- elif node | is_structure and node | is_multivector_index %}
        {{- index.declaration(node) }}
    {%- elif node | is_enumeration %}
        {{- enumeration.declaration(node) }}
    {%- elif node | is_archive %}
        {{- archive.declaration(node) }}
    {%- elif node | is_constant %}
        {{- constant.declaration(node) }}
    {%- endif %}

{% endfor %}
