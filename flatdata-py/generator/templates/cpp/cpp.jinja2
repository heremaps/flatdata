{% import "cpp/constant.jinja2" as constant %}
{% import "cpp/enumeration.jinja2" as enumeration %}
{% import "cpp/structure.jinja2" as structure %}
{% import "cpp/archive.jinja2" as archive %}
{% import "cpp/namespace.jinja2" as namespace %}

#pragma once

#include <flatdata/flatdata.h>
#include <cstdint>
#include <iostream>
#include <iomanip>

{% for node in nodes %}
{{ namespace.opening(node) }}
    {%- if node|is_structure %}
        {{- structure.declaration(node) }}
    {%- elif node|is_enumeration %}
        {{- enumeration.declaration(node) }}
    {%- elif node|is_archive %}
        {{- archive.declaration(node) }}
    {%- elif node|is_constant %}
        {{- constant.declaration(node) }}
    {%- endif %}

{{ namespace.closing(node) }}
{% endfor %}

// -------------------------------------------------------------------------------------------------
// -------------------------------------- Implementations ------------------------------------------
// -------------------------------------------------------------------------------------------------

{% for node in nodes if not node|is_constant %}
{{ namespace.opening(node) }}
    {%- if node|is_structure %}
        {{- structure.definition(node, tree) }}
    {%- elif node|is_enumeration %}
        {{- enumeration.definition(node, tree) }}
    {%- elif node|is_archive %}
        {{- archive.definition(node, tree) }}
    {%- endif %}
{{ namespace.closing(node) }}
{% endfor %}
