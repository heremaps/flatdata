{% macro generate(tree, nodes) %}
/////////////////////////////////////////////////////////////////////////
//    ATTENTION!
//    This code is automatically generated by flatdata generator.
//    Any modifications to this file will be lost upon next regeneration.
/////////////////////////////////////////////////////////////////////////
package {{ tree.root.children[0].name }}

import (
	"bytes"
	"encoding/binary"
	"errors"
	"fmt"
	"log"
{% if tree|contains_archive_resource %}
	"path/filepath"
{% endif %}

	"github.com/heremaps/flatdata/flatdata-go/flatdata"
)

const (
    flatdataOffsetSizeInBytes uint = 8
    flatdataPaddingSizeInBytes uint = 8
{% for node in nodes %}
    {% if node|is_structure %}
    {{ node.name|to_go_case(false) }}SizeInBytes = {{ node.size_in_bytes }}
    {% elif node|is_constant %}
    {{ node.name|to_go_case }} {{ node.type.name|type_mapping(node) }} = {{ node.value }}
    {% endif %}
{% endfor %}
)
{% endmacro %}