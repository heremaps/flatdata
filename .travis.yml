sudo: required

services:
  - docker

matrix:
  allow_failures:
    - rust: nightly

  include:
    # flatdata-py and generator
    - language: python
      dist: xenial
      python: 3.7
      before_script: cd flatdata-py
      script:
        - pip3 install -r requirements.txt
        - pip3 install -r generator/requirements.txt
        - python3 -m nose

    # gcc
    - language: cpp
      env:
        - C_COMPILER=clang CXX_COMPILER=clang++
      script:
        - |
          docker run -t \
            -e C_COMPILER=${C_COMPILER} \
            -e CXX_COMPILER=${CXX_COMPILER} \
            -v $(pwd):/src \
            -w /build \
            boxdot/flatdata-dev:15 /src/ci/build-and-test-cpp.sh

    # clang
    - language: cpp
      env:
        - C_COMPILER=gcc CXX_COMPILER=g++
      script:
        - |
          docker run -t \
            -e C_COMPILER=${C_COMPILER} \
            -e CXX_COMPILER=${CXX_COMPILER} \
            -v $(pwd):/src \
            -w /build \
            boxdot/flatdata-dev:15 /src/ci/build-and-test-cpp.sh

    # go
    - language: go
      go: 1.x
      install: true
      before_script:
        - go get github.com/golang/dep/cmd/dep
        - go get golang.org/x/lint/golint
      script:
        - |
          set -ex
          pushd flatdata-go/flatdata; make run-ci; popd
          docker run -t --user `id -u $USER` -v $(pwd):/src -w /src boxdot/flatdata-dev:15 \
            ./generator -v -g go \
              -s flatdata-go/backward-compatibility-tests/test_backward_compatibility.schema \
              -O flatdata-go/backward-compatibility-tests/test_backward_compatibility_generated.go
          pushd flatdata-go/backward-compatibility-tests; make run-ci; popd

    # rust
    - language: rust
      rust: stable
      cache:
        - cargo
      addons:
        apt:
          packages:
            - libcurl4-openssl-dev
            - libelf-dev
            - libdw-dev
            - binutils-dev
      before_script:
        - cd flatdata-rs
        - cargo install cargo-update || echo "cargo-update already installed"
        - cargo install cargo-travis || echo "cargo-travis already installed"
        - cargo install-update -a # update outdated cached binaries
      script:
        - cargo build
        - cargo test
      after_success:
        - cargo coveralls

    - language: rust
      rust: beta
      cache: cargo
      before_script:
        - cd flatdata-rs
      script:
        - cargo build
        - cargo test

    - language: rust
      rust: nightly
      cache: cargo
      before_script:
        - cd flatdata-rs
      script:
        - cargo build
        - cargo test
