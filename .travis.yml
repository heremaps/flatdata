sudo: required
dist: focal
language: minimal

matrix:
  allow_failures:
    - rust: beta # see: https://github.com/rust-lang/rust/issues/63888
    - rust: nightly

  include:
    # flatdata-generator
    - language: python
      name: "flatdata-generator"
      python: 3.9
      install:
        - cd flatdata-generator
        - pip install -r requirements.txt # runtime requirements
        - pip install nose pylint # CI requirements
      script:
        # run tests
        - python -m nose
        # try to install
        - pip install .
        - flatdata-generator --help

    # flatdata-py
    - language: python
      name: "flatdata-py"
      python: 3.9
      install:
        - pip install ./flatdata-generator
        - cd flatdata-py
        - pip install -r requirements.txt # runtime requirements
        - pip install nose pylint # CI requirements
      script:
        - python -m nose
        - pip install .
        - flatdata-inspector --help

    # cpp
    - language: cpp
      name: "flatdata-cpp"
      compiler: gcc
      addons:
        apt:
          packages:
            - python3-pip
            - python3-setuptools
            - libboost-filesystem-dev
      install:
        - pip3 install ./flatdata-generator
      script:
        - flatdata-cpp/ci/build-and-test-cpp.sh

    # cpp
    - language: cpp
      name: "flatdata-cpp"
      compiler: clang
      addons:
        apt:
          packages:
            - python3-pip
            - python3-setuptools
            - libboost-filesystem-dev
      install:
        - pip3 install ./flatdata-generator
      script:
        - flatdata-cpp/ci/build-and-test-cpp.sh

    # go
    - language: go
      name: "flatdata-go"
      go: 1.x
      install: true
      before_script:
        - go get github.com/golang/dep/cmd/dep
        - go get golang.org/x/lint/golint
      script:
        - |
          set -ex
          pushd flatdata-go/flatdata; make run-ci; popd
          docker run -t --user `id -u $USER` -v $(pwd):/src -w /src boxdot/flatdata-dev:15 \
            ./generator -v -g go \
              -s flatdata-go/backward-compatibility-tests/test_backward_compatibility.schema \
              -O flatdata-go/backward-compatibility-tests/test_backward_compatibility_generated.go
          pushd flatdata-go/backward-compatibility-tests; make run-ci; popd

    # dot
    - language: python
      name: "flatdata-dot"
      addons:
        apt:
          packages:
            - graphviz
      install:
        - pip3 install ./flatdata-generator
      script:
        - ci/dot_test_cases.sh

    # rust
    - language: rust
      name: "flatdata-rs"
      rust: stable
      cache:
        - cargo
      addons:
        apt:
          packages:
            - python3-venv
      script:
        - export FLATDATA_GENERATOR_PATH=${PWD}/flatdata-generator # use generator from source
        - cd flatdata-rs
        - cargo build
        - cargo test
        - cargo build --all-features
        - cargo test --all-features
      after_success:
        - cargo coveralls

    # rust
    - language: rust
      name: "flatdata-rs"
      dist: bionic
      rust: beta
      cache:
        - cargo
      addons:
        apt:
          packages:
            - python3-venv
      script:
        - export FLATDATA_GENERATOR_PATH=${PWD}/flatdata-generator # use generator from source
        - cd flatdata-rs
        - cargo build
        - cargo test

    # rust
    - language: rust
      name: "flatdata-rs"
      dist: bionic
      rust: nightly
      cache:
        - cargo
      addons:
        apt:
          packages:
            - python3-venv
      script:
        - export FLATDATA_GENERATOR_PATH=${PWD}/flatdata-generator # use generator from source
        - cd flatdata-rs
        - cargo build
        - cargo test
